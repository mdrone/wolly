#!/usr/bin/env lua

--[[ 

    Usage: ./wolly 00:11:22:00:11:22 10.0.0.255

--]]

local socket = require("socket")

if string.len(arg[1]) >= 12 and string.len(arg[2]) >= 8 then
    mac_address       = arg[1]
    broadcast_address = arg[2]
else 
    error ("usage: " .. arg[0] .. " [ MAC_ADDR ] [ BROADCAST ]")
    exit(-1)
end

function string.fromhex(str)
    -- inp <- string in hex-representation
    -- outp <- byte-table
    local x = {}
    for y in str:gmatch('(..)') do
        x[#x+1] = string.char( tonumber(y, 16) )
    end
    return table.concat( x )
end

function payload_generator (input)
    -- strip non-hex characters
    input = input:gsub("%W", "")
    input = input:gsub("[g-z,G-Z]", "")
    input = input:gsub("%w", string.upper)
    input = string.rep("FF", 6) ..  string.rep(input, 16)
    return input
end

payload = payload_generator(mac_address)

print(string.len(payload))

udp = socket.udp()
print(udp:setoption('broadcast', true))
print(udp:sendto(payload:fromhex(), broadcast_address, 7))
